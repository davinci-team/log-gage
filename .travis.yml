osx_image: xcode9.3beta
#osx_image: xcode9.2

sudo: required
services: docker

env:
  global:
    - ELECTRON_CACHE=$HOME/.cache/electron
    - ELECTRON_BUILDER_CACHE=$HOME/.cache/electron-builder

matrix:
  include:
    - os: osx
      language: node_js
      node_js: "9"
#    - os: linux
#      language: generic

cache:
  yarn: true
  directories:
  - node_modules
  - $HOME/.cache/electron
  - $HOME/.cache/electron-builder

before_install:
#  - mkdir -p /tmp/git-lfs && curl -L https://github.com/github/git-lfs/releases/download/v2.3.0/git-lfs-$([ "$TRAVIS_OS_NAME" == "linux" ] && echo "linux" || echo "darwin")-amd64-2.3.0.tar.gz | tar -xz -C /tmp/git-lfs --strip-components 1 && /tmp/git-lfs/git-lfs pull
  - |
    if ([[ "$TRAVIS_COMMIT_MESSAGE" == *"release candidate"*  ]]); then \
      echo "*** *** *** *** RELEASE CANDIDATE! *** *** *** ***"; \
    else \
      echo "*** *** *** *** NOT A RELEASE CANDIDATE *** *** *** ***"; \
    fi \
#  - npm install
#  - npm install --prefix ./client

install:
#  - npm install
#  - npm install --prefix ./client

script:
  - |
    if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then
      export CERTIFICATE_P12=Certificate.p12; \
      echo $CERTIFICATE_OSX_P12 | base64 --decode > $CERTIFICATE_P12; \
      export KEYCHAIN=build.keychain; \
      security create-keychain -p thetemporarytransientpassword $KEYCHAIN; \
      security default-keychain -s $KEYCHAIN; \
      security unlock-keychain -p thetemporarytransientpassword $KEYCHAIN; \
      security import $CERTIFICATE_P12 -k $KEYCHAIN -P $CERTIFICATE_PASSWORD -T /usr/bin/codesign; \

    fi;
  - npm run dist
#  - |
#    if [ "$TRAVIS_OS_NAME" == "linux" ]; then
#      if ([[ "$TRAVIS_COMMIT_MESSAGE" == *"release candidate"*  ]]); then \
#        echo ">>> >>> >>> RELEASE CANDIDATE! <<< <<< <<<"; \
#        docker run --rm \
#          --env-file <(env | grep -iE 'DEBUG|NODE_|ELECTRON_|YARN_|NPM_|CI|CIRCLE|TRAVIS|APPVEYOR_|CSC_|_TOKEN|_KEY|AWS_|STRIP|BUILD_') \
#          --env ELECTRON_CACHE="/root/.cache/electron" \
#          --env ELECTRON_BUILDER_CACHE="/root/.cache/electron-builder" \
#          -v ${PWD}:/project \
#          -v ~/.cache/electron:/root/.cache/electron \
#          -v ~/.cache/electron-builder:/root/.cache/electron-builder \
#          electronuserland/builder:wine \
#          /bin/bash -c "yarn --link-duplicates --pure-lockfile && yarn release --linux --win"
#      else \
#        echo ">>> NOT A RELEASE CANDIDATE <<<"; \
#        docker run --rm \
#          --env-file <(env | grep -iE 'DEBUG|NODE_|ELECTRON_|YARN_|NPM_|CI|CIRCLE|TRAVIS|APPVEYOR_|CSC_|_TOKEN|_KEY|AWS_|STRIP|BUILD_') \
#          --env ELECTRON_CACHE="/root/.cache/electron" \
#          --env ELECTRON_BUILDER_CACHE="/root/.cache/electron-builder" \
#          -v ${PWD}:/project \
#          -v ~/.cache/electron:/root/.cache/electron \
#          -v ~/.cache/electron-builder:/root/.cache/electron-builder \
#          electronuserland/builder:wine \
#          /bin/bash -c "yarn --link-duplicates --pure-lockfile && yarn build --linux --win"
#      fi \
#    else \
#      if ([[ "$TRAVIS_COMMIT_MESSAGE" == *"release candidate"*  ]]); then \
#        echo ">>> >>> >>> RELEASE CANDIDATE! <<< <<< <<<"; \
#        yarn release; \
#      else \
#        echo ">>> NOT A RELEASE CANDIDATE <<<"; \
#        yarn build; \
#      fi \
#    fi

before_cache:
  - rm -rf $HOME/.cache/electron-builder/wine

branches:
  except:
    - "/^v\\d+\\.\\d+\\.\\d+$/"